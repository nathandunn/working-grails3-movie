buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
//        classpath "org.grails.plugins:views-gradle:1.2.0"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.15.1"
        classpath "gradle.plugin.com.energizedwork.webdriver-binaries:webdriver-binaries-gradle-plugin:$webdriverBinariesVersion"
    }
}

version "0.1"
group "neo4j.movies"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
//apply plugin:"org.grails.plugins.views-json"
//apply plugin: 'codenarc'
apply plugin:"com.energizedwork.webdriver-binaries"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}


configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}
//tag::simpleExclude[]
//ext['jetty.version'] = '9.2.9.v20150224'
dependencies {
//end::simpleExclude[]
//    developmentOnly "org.springframework.boot:spring-boot-devtools"
    testCompile "org.grails.plugins:geb"

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:events"
    //tag::gormDep[]
    compile "org.grails.plugins:neo4j:$gormNeo4Version"
    //end::gormDep[]
//    compile "org.grails.plugins:views-json:1.2.0"
//    compile "org.grails.plugins:views-json-templates:1.2.0"
    console "org.grails:grails-console"
    profile "org.grails.profiles:rest-api"
    testCompile "org.grails:grails-web-testing-support"
    testCompile "org.grails:grails-gorm-testing-support"
//    testCompile "org.grails.plugins:geb"
    testCompile "org.grails:grails-datastore-rest-client"
    //tag::neo4JHarnessDep[]
    testRuntime "org.neo4j.test:neo4j-harness:$neo4jVersion"

    //end::neo4JHarnessDep[]
//    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
//    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

bootRun {
    jvmArgs = ['-Dspring.output.ansi.enabled=always']
    sourceResources sourceSets.main
    bootJar.enabled = false
//    addResources = true
}

codenarc {
    toolVersion = '0.27.0'
    configFile = file("${project.projectDir}/config/codenarc/rules.groovy")
    reportFormat = 'html'
}